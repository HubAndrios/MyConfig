
&НаКлиенте
Процедура Загрузить(Команда)
	
	ЗагрузкаНаКлиентеOLE();
	
КонецПроцедуры

&НаКлиенте
Функция УбратьСимволы(строка_)
		строка_ = СтрЗаменить(строка_," ","");
		строка_ = СтрЗаменить(строка_,Символы.ПС,"");
		строка_ = СтрЗаменить(строка_,Символы.Таб,"");
		строка_ = СтрЗаменить(строка_,Символы.ВТаб,"");
	
	Возврат строка_;
КонецФункции

  
&НаКлиенте
Процедура ЗагрузкаНаКлиентеOLE()
	Попытка
		Эксель = Новый COMОбъект("Excel.Application");
		Эксель.DisplayAlerts = 0;
		Эксель.Visible = 0;
	Исключение
   		Сообщить(ОписаниеОшибки()); 
   		Возврат;
	КонецПопытки;
	
	
	стЗаписываемыеКолонки = Новый Соответствие;
	стЗаписываемыеКолонки.Вставить("№","Номер");
	стЗаписываемыеКолонки.Вставить("Датаобращения","ДатаОбращения");
	стЗаписываемыеКолонки.Вставить("Куратор","Куратор");
	стЗаписываемыеКолонки.Вставить("Датаотправкизаявки","ДатаОтправки");
	стЗаписываемыеКолонки.Вставить("Датаответаконтрольная","ДатаОтветаКонтрольная");
	стЗаписываемыеКолонки.Вставить("Датаответафактическая","ДатаОтветаФактическая");
	стЗаписываемыеКолонки.Вставить("СтатусЗДИ","СтатусЗДИ");
	стЗаписываемыеКолонки.Вставить("Изв.Реквизитыписьма/№letter","Извещение_РеквизитыПисьма");
	стЗаписываемыеКолонки.Вставить("ЗамечаниеТАЕК/CommentTAEK","Извещение_ЗамечаниеТАЕК");
	стЗаписываемыеКолонки.Вставить("ОтветназамечанияТАЕК","Извещение_ОтветНаЗамечаниеТАЕК");
	стЗаписываемыеКолонки.Вставить("Статусзаявкиоборудование/полуфабрикаты","Извещение_СтатусЗаявки");
	стЗаписываемыеКолонки.Вставить("Комплектная/некомплектная","Извещение_Коплектность");
	стЗаписываемыеКолонки.Вставить("Реш.Реквизитыписьма/№letter","РешениеТАЕК_РеквизитыПисьма");
	стЗаписываемыеКолонки.Вставить("Статусразрешения(оборудование/полуфабрикаты)","РешениеТАЕК_СтатусРешения");
	стЗаписываемыеКолонки.Вставить("Инс.Реквизитыписьма/№letter","ПланыИнспекций_РеквизитыПисьмаИнспекций");
	стЗаписываемыеКолонки.Вставить("Примечания","Примечание");
	стЗаписываемыеКолонки.Вставить("Договора","Договора");

	
	стЗаписываемыеКолонкиТЧТовар = Новый Соответствие;
	стЗаписываемыеКолонкиТЧТовар.Вставить("Наименованиеоборудования","Наименование");
	стЗаписываемыеКолонкиТЧТовар.Вставить("Блок","НомерБлока");
	стЗаписываемыеКолонкиТЧТовар.Вставить("KKS","Артикул");
	
	стЗаписываемыеКолонкиТЧРевизия = Новый Соответствие;
	стЗаписываемыеКолонкиТЧРевизия.Вставить("QP-Revision","QP_Revision");
	стЗаписываемыеКолонкиТЧРевизия.Вставить("Ссылка","СсылкаНаПисьмо");
	


	ЭксельКнига = Эксель.Workbooks.Open(ИмяФайла);	
	КоличествоСтраниц = ЭксельКнига.Sheets.Count;
	
	Для НомерЛиста = 1 По КоличествоСтраниц Цикл 
		Лист = ЭксельКнига.Sheets(НомерЛиста);
		КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
		КоличествоКолонок = Лист.Cells(1, 1).SpecialCells(11).Column;
		строкаШапка = Лист.Cells(3, 1) ;
		
		Для НомерСтроки = 4 По КоличествоСтрок Цикл 
			ДанныеСтроки = Новый Структура;
			ДанныеСтрокиТЧтовар = Новый Структура;
			ДанныеСтрокиТЧРевизия = Новый СписокЗначений;
			
			
			Для НомерКолонки = 1 По КоличествоКолонок Цикл
				ИмяКолонки1С = стЗаписываемыеКолонки.Получить(УбратьСимволы(строкаШапка.Columns(НомерКолонки).value));
				ИмяКолонки1СТовар = стЗаписываемыеКолонкиТЧТовар.Получить(УбратьСимволы(строкаШапка.Columns(НомерКолонки).value));
				ИмяКолонки1СРевизия = стЗаписываемыеКолонкиТЧРевизия.Получить(УбратьСимволы(строкаШапка.Columns(НомерКолонки).value));
				ИмяКолонкиЕкс = строкаШапка.Columns(НомерКолонки).value;
				
				ЗначениеВЯчейке = Лист.Cells(НомерСтроки, строкаШапка.Columns(НомерКолонки).Column).Value;

				Если  ИмяКолонки1С <> Неопределено Тогда
					Если ИмяКолонки1С = "ДатаОбращения" Тогда
						попытка
							ДанныеСтроки.Вставить("Дата",  Дата(ЗначениеВЯчейке));
						Исключение 
						КонецПопытки;
					КонецЕсли;
					ДанныеСтроки.Вставить(ИмяКолонки1С,  ЗначениеВЯчейке);
				КонецЕсли;
				
				Если  ИмяКолонки1СТовар <> Неопределено Тогда
					ДанныеСтрокиТЧтовар.Вставить(ИмяКолонки1СТовар,  ЗначениеВЯчейке);
				КонецЕсли;
				    
				Если  ИмяКолонки1СРевизия <> Неопределено Тогда
					ДанныеСтрокиТЧРевизия.Добавить(новый Структура(ИмяКолонки1СРевизия,  ЗначениеВЯчейке));
				КонецЕсли;
				
			КонецЦикла;
			
			
			
			
			ЗаписатьДокумент(ДанныеСтроки,ДанныеСтрокиТЧтовар,ДанныеСтрокиТЧРевизия);
			//Возврат;
		КонецЦикла;	
		Прервать;
	КонецЦикла;
	
	Эксель.Workbooks.Close();
	Эксель.Application.Quit();
КонецПроцедуры
  
&НаСервере
Процедура ЗаписатьДокумент(ДанныеСтроки,ДанныеСтрокиТЧтовар,ДанныеСтрокиТЧРевизия)
	
	
	Артикул="";
	АртикулЗаполнен = ДанныеСтрокиТЧтовар.Свойство("Артикул",Артикул);	
	Если АртикулЗаполнен<>Неопределено Тогда
	ДанныеСтрокиТЧтовар.Вставить("Номенклатура", Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул));
	КонецЕсли;


	НомерЗаявки="";
	АртикулЗаполнен = ДанныеСтроки.Свойство("Номер",НомерЗаявки);
	ДатаОбращения="";
	АртикулЗаполнен = ДанныеСтроки.Свойство("ДатаОбращения",ДатаОбращения);
	
	
	докЗаявкаТАЕК = Документы.пр_ЗаявкаВТАЕК2.НайтиПоНомеру(НомерЗаявки,ДатаОбращения);
	
	Если Не ЗначениеЗаполнено(докЗаявкаТАЕК) Тогда
		докЗаявкаТАЕК = Документы.пр_ЗаявкаВТАЕК2.СоздатьДокумент();
	Иначе 
		докЗаявкаТАЕК = докЗаявкаТАЕК.ПолучитьОбъект();	
	КонецЕсли;
	
	
	ЗаполнитьЗначенияСвойств(докЗаявкаТАЕК, ДанныеСтроки);
	СтрокаТовары = докЗаявкаТАЕК.Товары.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТовары, ДанныеСтрокиТЧтовар);
	
	
	
	//ЗаполнитьЗначенияСвойств(СтрокаРевизия, ДанныеСтрокиТЧРевизия);
	стСтроки=новый структура;
	
	НомерСтроки=1;	
	для Каждого строки из ДанныеСтрокиТЧРевизия Цикл 
		ЗаписатьВдокумент=ложь;
		Если НомерСтроки=1 Тогда
			Для каждого ст из строки.Значение Цикл
				стСтроки.Вставить(ст.Ключ,ст.Значение);
			КонецЦикла;
			НомерСтроки=2;
		Иначе
			Для каждого ст из строки.Значение Цикл
				стСтроки.Вставить(ст.Ключ,ст.Значение);
				
			КонецЦикла;
			НомерСтроки=1;
			ЗаписатьВдокумент=Истина;
			
		КонецЕсли;
		
		Если ЗаписатьВдокумент Тогда
			СтрокаРевизия = докЗаявкаТАЕК.Ревизия.Добавить();

			ЗаполнитьЗначенияСвойств(СтрокаРевизия, стСтроки);
			стСтроки.Очистить();
					КонецЕсли;
		
	КонецЦикла;
	
	

	//ПараметрыЗаписи = Новый Структура;
	//ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	//ЭтаФорма.Записать(ПараметрыЗаписи);
	докЗаявкаТАЕК.Записать(РежимЗаписиДокумента.Запись);				
	Сообщить(СокрЛП(докЗаявкаТАЕК)+" - загружен.");
	
КонецПроцедуры



&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Документ Excel (*.xls, *.xlsx)|*.xls;*.xlsx";
	Диалог.МножественныйВыбор=Ложь;
	Если Диалог.Выбрать() Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры





















Процедура ЗагрузкаНаКлиентеOLEДоп()
	Попытка
		Эксель = Новый COMОбъект("Excel.Application");
		Эксель.DisplayAlerts = 0;
		Эксель.Visible = 0;
	Исключение
   		Сообщить(ОписаниеОшибки()); 
   		Возврат;
	КонецПопытки;
	
	стЗаписываемыеКолонки = Новый Соответствие;
	стЗаписываемыеКолонки.Вставить("NAME","Наименование");
	стЗаписываемыеКолонки.Вставить("KKS","Артикул");

	

	ЭксельКнига = Эксель.Workbooks.Open(ИмяФайла);	
	КоличествоСтраниц = ЭксельКнига.Sheets.Count;
	
	Для НомерЛиста = 1 По КоличествоСтраниц Цикл 
		Лист = ЭксельКнига.Sheets(НомерЛиста);
		КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
		КоличествоКолонок = Лист.Cells(1, 1).SpecialCells(11).Column;
		строкаШапка = Лист.Cells(2, 1) ;
		
		Для НомерСтроки = 3 По КоличествоСтрок Цикл 
			ДанныеСтроки = Новый Структура;
			Для НомерКолонки = 1 По КоличествоКолонок Цикл
				ИмяКолонкиСпр = стЗаписываемыеКолонки.Получить(строкаШапка.Columns(НомерКолонки).value);
				ИмяКолонкиЕкс = строкаШапка.Columns(НомерКолонки).value;
				
				ЗначениеВЯчейке = Лист.Cells(НомерСтроки, строкаШапка.Columns(НомерКолонки).Column).Value;

				Если  ИмяКолонкиСпр <> Неопределено Тогда
					ДанныеСтроки.Вставить(ИмяКолонкиСпр,  ЗначениеВЯчейке);
					ДанныеСтроки.Вставить(СокрЛП(ИмяКолонкиЕкс),  ЗначениеВЯчейке);
				иначе
					попытка
					ДанныеСтроки.Вставить(СокрЛП(ИмяКолонкиЕкс),  ЗначениеВЯчейке);
				Исключение
					Сообщить(ОписаниеОшибки());
					КонецПопытки;
				КонецЕсли;
				
			КонецЦикла;
			
			ЗаписатьНоменклатуруДопРекв(ДанныеСтроки);
			//Возврат;
		КонецЦикла;	
		Прервать;
	КонецЦикла;
	
	Эксель.Workbooks.Close();
	Эксель.Application.Quit();
КонецПроцедуры

&НаСервере
Функция ПоискЗначенияПоКлючу(ст, Ключ, ДляСоответствия=Ложь)
		Если ДляСоответствия Тогда
			Возврат ст[Ключ];
		Иначе
			ЗначениеПоиска = Неопределено;
			ст.Свойство(Ключ,ЗначениеПоиска);
			Возврат ЗначениеПоиска;
		КонецЕсли;
КонецФункции 
		
&НаСервере
Процедура ЗаписатьНоменклатуруДопРекв(ДанныеСтроки)
	  	Артикул="";
	АртикулЗаполнен = ДанныеСтроки.Свойство("Артикул",Артикул);	
	Если Не АртикулЗаполнен Тогда Возврат; КонецЕсли;
	Наименование="";
	ДанныеСтроки.Свойство("Наименование",Наименование);	
	
	
	Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		Номенклатура = Справочники.Номенклатура.СоздатьЭлемент();
	иначе
		Номенклатура= Номенклатура.Получитьобъект();
	КонецЕсли;
	
	Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(Номенклатура); 

	//ЗаполнитьЗначенияСвойств(Номенклатура, ДанныеСтроки);
	//Номенклатура.Наименование = "Удале_"+Номенклатура.Наименование;
	//Номенклатура.Артикул = "Удале_"+Номенклатура.Артикул;
	Номенклатура.Артикул = Артикул;	
	Номенклатура.Наименование = Наименование;
	Номенклатура.НаименованиеПолное = Наименование;
	Номенклатура.Записать(); 
	
	для Каждого ст Из ДанныеСтроки Цикл 
		если ст.Ключ = "Артикул" или ст.Ключ = "Наименование" Тогда Продолжить;КонецЕсли;

		СоздатьДопРеквизитНаСервере(ст.Ключ);
		ТаблицаСвойств = Новый ТаблицаЗначений;
		ТаблицаСвойств.Колонки.Добавить("Свойство");
		ТаблицаСвойств.Колонки.Добавить("Значение");
		строкаТС = ТаблицаСвойств.Добавить();
		строкаТС.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ст.Ключ);
		//ЗначениеПоиска = Неопределено;
		//ст.Свойство(Ключ,ЗначениеПоиска);
		строкаТС.Значение = ст.Значение;
	

		УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(Номенклатура.Ссылка,ТаблицаСвойств);
		
	КонецЦикла;
	
	
	
	Сообщить(СокрЛП(Номенклатура.Артикул)+" - загружен.");

	
КонецПроцедуры

&НаСервере
Процедура СоздатьДопРеквизитНаСервере(ИмяРеквизита)
	
    //включим константу использования
    Если Не Константы.ИспользоватьДополнительныеРеквизитыИСведения.Получить() Тогда
        Константы.ИспользоватьДополнительныеРеквизитыИСведения.Установить(Истина);
    КонецЕсли;
	
	//попробуем найти реквизит по наименованию
	ДопРеквизитСсылка = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ИмяРеквизита);
	Если НЕ ЗначениеЗаполнено(ДопРеквизитСсылка) Тогда
		//если не нашли реквизит - будем его создавать
		ДопРеквизитОбъект = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
		ДопРеквизитОбъект.Заголовок = ИмяРеквизита;
		ДопРеквизитОбъект.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура;
		ДопРеквизитОбъект.ТипЗначения = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(250));
		ДопРеквизитОбъект.Наименование = ДопРеквизитОбъект.Заголовок + " ("+ДопРеквизитОбъект.НаборСвойств+")";
		ДопРеквизитОбъект.Виден = Истина;
		ДопРеквизитОбъект.Доступен = Истина;
		ДопРеквизитОбъект.ДополнительныеЗначенияИспользуются = ложь;
		//зададим имя нового реквизита
		//ДопРеквизитОбъект.Имя = "filap_"+СтрЗаменить(ИмяРеквизита," ","");
		ДопРеквизитОбъект.Записать();
		ДопРеквизитСсылка = ДопРеквизитОбъект.Ссылка;		
	КонецЕсли;
	
    //добавим наш реквизит в набор дополнительных реквизитов 
    НаборДополнительныхРеквизитов = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура.ПолучитьОбъект();
    Если НаборДополнительныхРеквизитов.ДополнительныеРеквизиты.Найти(ДопРеквизитСсылка, "Свойство") = Неопределено Тогда
        //добавим реквизит в набор
        Стр = НаборДополнительныхРеквизитов.ДополнительныеРеквизиты.Добавить();
        Стр.Свойство = ДопРеквизитСсылка;
	НаборДополнительныхРеквизитов.Записать();
    КонецЕсли;
	
КонецПроцедуры

