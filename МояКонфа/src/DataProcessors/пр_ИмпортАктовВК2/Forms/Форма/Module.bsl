
&НаКлиенте
Процедура Загрузить(Команда)
	
	ЗагрузкаНаКлиентеOLE();
	
КонецПроцедуры

&НаКлиенте
Функция УбратьСимволы(строка_)
		строка_ = СтрЗаменить(строка_," ","");
		строка_ = СтрЗаменить(строка_,Символы.ПС,"");
		строка_ = СтрЗаменить(строка_,Символы.Таб,"");
		строка_ = СтрЗаменить(строка_,Символы.ВТаб,"");
	
	Возврат строка_;
КонецФункции

  
&НаКлиенте
Процедура ЗагрузкаНаКлиентеOLE()
	Попытка
		Эксель = Новый COMОбъект("Excel.Application");
		Эксель.DisplayAlerts = 0;
		Эксель.Visible = 0;
	Исключение
   		Сообщить(ОписаниеОшибки()); 
   		Возврат;
	КонецПопытки;
	
	
	стЗаписываемыеКолонки = Новый Соответствие;
	стЗаписываемыеКолонки.Вставить("№","Номер");
	стЗаписываемыеКолонки.Вставить("ОтветственныйсотрудникОВК","ОтветственныйОВК");
	стЗаписываемыеКолонки.Вставить("РегистрационныйномерАктаВК-2","РегистрационныйНомер");
	стЗаписываемыеКолонки.Вставить("Номеридатаконтрактанапоставку(наименованиепоставщика)","НомерДатаКонтрактаНаПоставку");
	стЗаписываемыеКолонки.Вставить("АктуальныйРезультатпроведенияВК-2(СогласнозаключениювпоследнемАктеВК-2)","АктуальныйРезультатПроведенияВК");
	стЗаписываемыеКолонки.Вставить("Состояниеупаковки(сповреждениями/безповреждений)","СостояниеУпаковки");
	стЗаписываемыеКолонки.Вставить("ДатаиномерТТН","НомерДатаТТН");
	стЗаписываемыеКолонки.Вставить("ДатаготовностикпроведениюВК-2","ДатаГотовностиКпроведениюВК");
	стЗаписываемыеКолонки.Вставить("ПоставкаЗаказчика/Генподрядчика","ПоставкаЗаказчика");
	стЗаписываемыеКолонки.Вставить("ПРИМЕЧАНИЕ","Примечание");
	
	стЗаписываемыеКолонки.Вставить("24Номер","Уведомление_Номер");
	стЗаписываемыеКолонки.Вставить("25День","Уведомление_Дата_День");
	стЗаписываемыеКолонки.Вставить("26Месяц(Цифрами)","Уведомление_Дата_Месяц");
	стЗаписываемыеКолонки.Вставить("27Год","Уведомление_Дата_Год");
	стЗаписываемыеКолонки.Вставить("28Номер","СлужебнаяЗапискаОВК_Номер");
	стЗаписываемыеКолонки.Вставить("29Дата","СлужебнаяЗапискаОВК_Дата");
	стЗаписываемыеКолонки.Вставить("30Цех-владельцоборудованияидругиеподразделения(принеобходимости)","СлужебнаяЗапискаЦеха_Цех");
	стЗаписываемыеКолонки.Вставить("31Номер","СлужебнаяЗапискаЦеха_Номер");
	стЗаписываемыеКолонки.Вставить("32Дата","СлужебнаяЗапискаЦеха_Дата");
	стЗаписываемыеКолонки.Вставить("33Цех-владельцоборудованияидругиеподразделения(принеобходимости)","СлужебнаяЗапискаЦехаОтчет_Цех");
	стЗаписываемыеКолонки.Вставить("34Номер","СлужебнаяЗапискаЦехаОтчет_Номер");
	стЗаписываемыеКолонки.Вставить("35Дата","СлужебнаяЗапискаЦехаОтчет_Дата");
	стЗаписываемыеКолонки.Вставить("36Цех-владельцоборудованияидругиеподразделения(принеобходимости)","ОтчетВК_Цех");
	стЗаписываемыеКолонки.Вставить("37Номер","ОтчетВК_Номер");
	стЗаписываемыеКолонки.Вставить("38Дата","ОтчетВК_Дата");	
	стЗаписываемыеКолонки.Вставить("39ФактическаядатаполученияОтчетасотрудникомОВК","ОтчетВК_ДатаФакт");
	стЗаписываемыеКолонки.Вставить("40НомерАктаВК-2","НомерАктаВК");
	стЗаписываемыеКолонки.Вставить("41ДатаАктаВК-2","ДатаАктаВК");
	стЗаписываемыеКолонки.Вставить("42День","ДатаУтвержденияАкта_День");
	стЗаписываемыеКолонки.Вставить("43Месяц(цифрами)","ДатаУтвержденияАкта_Месяц");
	стЗаписываемыеКолонки.Вставить("44Год","ДатаУтвержденияАкта_Год");
	стЗаписываемыеКолонки.Вставить("45Наменованиеиобозначениедокументовокачестве","ДокументыОКачестве");
	стЗаписываемыеКолонки.Вставить("46ЗаключениесогласноАктуВК-2(Оборудованиедопускаетсядляпередачивмонтаж,оборудованиенедопускаетсядляпередачивмонтаж,оборудованиедопускаетсядляпередачивмонтажсучетомгарантийногописьма)","Заключение");
	стЗаписываемыеКолонки.Вставить("47НомеридатасопроводительнойслужебнойзапискисАктомВК-2вадресУправленияпоставкиоборудованияиматериалов","НомерДатаСопроводительнойЗаписки");
	стЗаписываемыеКолонки.Вставить("Номеридатагарантийногописьма(наименованиеПостащика)","Замечание_НомерДатаГП");
	стЗаписываемыеКолонки.Вставить("ТипГП(ЗИН-замечанияинесоответствия)","Замечание_ТипГП");
	стЗаписываемыеКолонки.Вставить("Срокустранениязамечанийинесоответствийпогарантийномуписьму","Замечание_СрокУстранения");
	стЗаписываемыеКолонки.Вставить("Статусустранениязамечанийинесоответсвийпогарантийномуписьму(неустраненоилиустранено)","Замечание_СтатусУстранения");
	стЗаписываемыеКолонки.Вставить("Фактическийсрокустранениязамечанийинесоответсвий","Замечание_СрокУстраненияФакт");

	стЗаписываемыеКолонкиДопВК1 = Новый Соответствие;
	стЗаписываемыеКолонкиДопВК1.Вставить("53Номер","Уведомление_Номер");
	стЗаписываемыеКолонкиДопВК1.Вставить("54День","Уведомление_Дата_День");
	стЗаписываемыеКолонкиДопВК1.Вставить("55Месяц(Цифрами)","Уведомление_Дата_Месяц");
	стЗаписываемыеКолонкиДопВК1.Вставить("56Год","Уведомление_Дата_Год");
	стЗаписываемыеКолонкиДопВК1.Вставить("56Номер","СлужебнаяЗапискаОВК_Номер");
	стЗаписываемыеКолонкиДопВК1.Вставить("58Дата","СлужебнаяЗапискаОВК_Дата");
	стЗаписываемыеКолонкиДопВК1.Вставить("59Цех-владельцоборудованияидругиеподразделения(принеобходимости)","СлужебнаяЗапискаЦеха_Цех");
	стЗаписываемыеКолонкиДопВК1.Вставить("60Номер","СлужебнаяЗапискаЦеха_Номер");
	стЗаписываемыеКолонкиДопВК1.Вставить("61Дата","СлужебнаяЗапискаЦеха_Дата");
	стЗаписываемыеКолонкиДопВК1.Вставить("62Цех-владельцоборудованияидругиеподразделения(принеобходимости)","СлужебнаяЗапискаЦехаОтчет_Цех");
	стЗаписываемыеКолонкиДопВК1.Вставить("63Номер","СлужебнаяЗапискаЦехаОтчет_Номер");
	стЗаписываемыеКолонкиДопВК1.Вставить("64Дата","СлужебнаяЗапискаЦехаОтчет_Дата");
	стЗаписываемыеКолонкиДопВК1.Вставить("65Цех-владельцоборудованияидругиеподразделения(принеобходимости)","ОтчетВК_Цех");
	стЗаписываемыеКолонкиДопВК1.Вставить("66Номер","ОтчетВК_Номер");
	стЗаписываемыеКолонкиДопВК1.Вставить("67Дата","ОтчетВК_Дата");	
	стЗаписываемыеКолонкиДопВК1.Вставить("68ФактическаядатаполученияОтчетасотрудникомОВК","ОтчетВК_ДатаФакт");
	стЗаписываемыеКолонкиДопВК1.Вставить("69НомерповторногоАктаВК-2","НомерАктаВК");
	стЗаписываемыеКолонкиДопВК1.Вставить("70ДатаповторногоАктаВК-2","ДатаАктаВК");
	//стЗаписываемыеКолонкиДопВК1.Вставить("72НомерАктаВК-2","Номер");
	//стЗаписываемыеКолонкиДопВК1.Вставить("73ДатаАктаВК-2","Дата");	
	стЗаписываемыеКолонкиДопВК1.Вставить("71День","ДатаУтвержденияАкта_День");
	стЗаписываемыеКолонкиДопВК1.Вставить("72Месяц(цифрами)","ДатаУтвержденияАкта_Месяц");
	стЗаписываемыеКолонкиДопВК1.Вставить("73Год","ДатаУтвержденияАкта_Год");
	стЗаписываемыеКолонкиДопВК1.Вставить("Наменованиеиобозначениедокументовокачестве","ДокументыОКачестве");
	стЗаписываемыеКолонкиДопВК1.Вставить("ЗаключениесогласноповторномуАктуВК-2(Оборудованиедопускаетсядляпередачивмонтаж,оборудованиенедопускаетсядляпередачивмонтаж,оборудованиедопускаетсядляпередачивмонтажсучетомгарантийногописьма)","Заключение");
	стЗаписываемыеКолонкиДопВК1.Вставить("НомеридатасопроводительнойслужебнойзапискисповторнымАктовВК-2вадресУправленияпоставкиоборудованияиматериалов","НомерДатаСопроводительнойЗаписки");
	
	
	стЗаписываемыеКолонкиДопВК2 = Новый Соответствие;
	стЗаписываемыеКолонкиДопВК2.Вставить("77Номер","Уведомление_Номер");
	стЗаписываемыеКолонкиДопВК2.Вставить("78День","Уведомление_Дата_День");
	стЗаписываемыеКолонкиДопВК2.Вставить("79Месяц(Цифрами)","Уведомление_Дата_Месяц");
	стЗаписываемыеКолонкиДопВК2.Вставить("80Год","Уведомление_Дата_Год");
	стЗаписываемыеКолонкиДопВК2.Вставить("81Номер","СлужебнаяЗапискаОВК_Номер");
	стЗаписываемыеКолонкиДопВК2.Вставить("82Дата","СлужебнаяЗапискаОВК_Дата");
	стЗаписываемыеКолонкиДопВК2.Вставить("83Цех-владельцоборудованияидругиеподразделения(принеобходимости)","СлужебнаяЗапискаЦеха_Цех");
	стЗаписываемыеКолонкиДопВК2.Вставить("84Номер","СлужебнаяЗапискаЦеха_Номер");
	стЗаписываемыеКолонкиДопВК2.Вставить("85Дата","СлужебнаяЗапискаЦеха_Дата");
	стЗаписываемыеКолонкиДопВК2.Вставить("86Цех-владельцоборудованияидругиеподразделения(принеобходимости)","СлужебнаяЗапискаЦехаОтчет_Цех");
	стЗаписываемыеКолонкиДопВК2.Вставить("87Номер","СлужебнаяЗапискаЦехаОтчет_Номер");
	стЗаписываемыеКолонкиДопВК2.Вставить("88Дата","СлужебнаяЗапискаЦехаОтчет_Дата");
	стЗаписываемыеКолонкиДопВК2.Вставить("89Цех-владельцоборудованияидругиеподразделения(принеобходимости)","ОтчетВК_Цех");
	стЗаписываемыеКолонкиДопВК2.Вставить("90Номер","ОтчетВК_Номер");
	стЗаписываемыеКолонкиДопВК2.Вставить("91Дата","ОтчетВК_Дата");	
	стЗаписываемыеКолонкиДопВК2.Вставить("92ФактическаядатаполученияОтчетасотрудникомОВК","ОтчетВК_ДатаФакт");
	//стЗаписываемыеКолонкиДопВК2.Вставить("94НомерповторногоАктаВК-2","Номер");
	//стЗаписываемыеКолонкиДопВК2.Вставить("95ДатаповторногоАктаВК-2","Дата");
	стЗаписываемыеКолонкиДопВК2.Вставить("93НомерАктаВК-2","НомерАктаВК");
	стЗаписываемыеКолонкиДопВК2.Вставить("94ДатаАктаВК-2","ДатаАктаВК");	
	стЗаписываемыеКолонкиДопВК2.Вставить("95День","ДатаУтвержденияАкта_День");
	стЗаписываемыеКолонкиДопВК2.Вставить("96Месяц(цифрами)","ДатаУтвержденияАкта_Месяц");
	стЗаписываемыеКолонкиДопВК2.Вставить("97Год","ДатаУтвержденияАкта_Год");
	стЗаписываемыеКолонкиДопВК2.Вставить("98Наменованиеиобозначениедокументовокачестве","ДокументыОКачестве");
	стЗаписываемыеКолонкиДопВК2.Вставить("99ЗаключениесогласноповторномуАктуВК-2(Оборудованиедопускаетсядляпередачивмонтаж,оборудованиенедопускаетсядляпередачивмонтаж,оборудованиедопускаетсядляпередачивмонтажсучетомгарантийногописьма)","Заключение");
	стЗаписываемыеКолонкиДопВК2.Вставить("100НомеридатасопроводительнойслужебнойзапискисповторнымАктовВК-2вадресУправленияпоставкиоборудованияиматериало","НомерДатаСопроводительнойЗаписки");
	
	
	стЗаписываемыеКолонкиДопВК3 = Новый Соответствие;
	стЗаписываемыеКолонкиДопВК3.Вставить("101Номер","Уведомление_Номер");
	стЗаписываемыеКолонкиДопВК3.Вставить("102День","Уведомление_Дата_День");
	стЗаписываемыеКолонкиДопВК3.Вставить("103Месяц(Цифрами)","Уведомление_Дата_Месяц");
	стЗаписываемыеКолонкиДопВК3.Вставить("104Год","Уведомление_Дата_Год");
	стЗаписываемыеКолонкиДопВК3.Вставить("105Номер","СлужебнаяЗапискаОВК_Номер");
	стЗаписываемыеКолонкиДопВК3.Вставить("106Дата","СлужебнаяЗапискаОВК_Дата");
	стЗаписываемыеКолонкиДопВК3.Вставить("107Цех-владельцоборудованияидругиеподразделения(принеобходимости)","СлужебнаяЗапискаЦеха_Цех");
	стЗаписываемыеКолонкиДопВК3.Вставить("108Номер","СлужебнаяЗапискаЦеха_Номер");
	стЗаписываемыеКолонкиДопВК3.Вставить("109Дата","СлужебнаяЗапискаЦеха_Дата");
	стЗаписываемыеКолонкиДопВК3.Вставить("110Цех-владельцоборудованияидругиеподразделения(принеобходимости)","СлужебнаяЗапискаЦехаОтчет_Цех");
	стЗаписываемыеКолонкиДопВК3.Вставить("111Номер","СлужебнаяЗапискаЦехаОтчет_Номер");
	стЗаписываемыеКолонкиДопВК3.Вставить("112Дата","СлужебнаяЗапискаЦехаОтчет_Дата");
	стЗаписываемыеКолонкиДопВК3.Вставить("113Цех-владельцоборудованияидругиеподразделения(принеобходимости)","ОтчетВК_Цех");
	стЗаписываемыеКолонкиДопВК3.Вставить("114Номер","ОтчетВК_Номер");
	стЗаписываемыеКолонкиДопВК3.Вставить("115Дата","ОтчетВК_Дата");	
	стЗаписываемыеКолонкиДопВК3.Вставить("116ФактическаядатаполученияОтчетасотрудникомОВК","ОтчетВК_ДатаФакт");
	//стЗаписываемыеКолонкиДопВК3.Вставить("118НомерповторногоАктаВК-2","Номер");
	//стЗаписываемыеКолонкиДопВК3.Вставить("119ДатаповторногоАктаВК-2","Дата");
	стЗаписываемыеКолонкиДопВК3.Вставить("117НомерАктаВК-2","НомерАктаВК");
	стЗаписываемыеКолонкиДопВК3.Вставить("118ДатаАктаВК-2","ДатаАктаВК");	
	стЗаписываемыеКолонкиДопВК3.Вставить("119День","ДатаУтвержденияАкта_День");
	стЗаписываемыеКолонкиДопВК3.Вставить("120Месяц(цифрами)","ДатаУтвержденияАкта_Месяц");
	стЗаписываемыеКолонкиДопВК3.Вставить("121Год","ДатаУтвержденияАкта_Год");
	стЗаписываемыеКолонкиДопВК3.Вставить("122Наменованиеиобозначениедокументовокачестве","ДокументыОКачестве");
	стЗаписываемыеКолонкиДопВК3.Вставить("123ЗаключениесогласноповторномуАктуВК-2(Оборудованиедопускаетсядляпередачивмонтаж,оборудованиенедопускаетсядляпередачивмонтаж,оборудованиедопускаетсядляпередачивмонтажсучетомгарантийногописьма)","Заключение");
	стЗаписываемыеКолонкиДопВК3.Вставить("124НомеридатасопроводительнойслужебнойзапискисповторнымАктовВК-2вадресУправленияпоставкиоборудованияиматериало","НомерДатаСопроводительнойЗаписки");
	
	

	
	стЗаписываемыеКолонкиТЧТовар = Новый Соответствие;
	стЗаписываемыеКолонкиТЧТовар.Вставить("ПолноенаименованиеединицыоборудованиявсоответствиисГОСТ(ОСТ),ТЗ/ТУ/ТТ(чертежом)","НаименованиеОборудования");
	стЗаписываемыеКолонкиТЧТовар.Вставить("Условноеобозначениеоборудования(приналичии),обозначениечертежа(ТЗ/ТУ/ТТ,ГОСТит.п.)сучетоммодификации","УсловноеОбозначениеОборудования");
	стЗаписываемыеКолонкиТЧТовар.Вставить("КодKKS(КодMCS)","КодОборудования");
	стЗаписываемыеКолонкиТЧТовар.Вставить("КлассбезопасностипоНП-001","КлассБезопастности");
	стЗаписываемыеКолонкиТЧТовар.Вставить("Категорияобеспечениякачества","КатегорияКачества");
	стЗаписываемыеКолонкиТЧТовар.Вставить("Количествоединицоборудованиявпартии","Количество");
	стЗаписываемыеКолонкиТЧТовар.Вставить("Единицыизмерения","ЕдиницаИзмерения");
	стЗаписываемыеКолонкиТЧТовар.Вставить("Наименованиепредприятия-изготовителя(странаигороднахожденияпредприятия-изготовителя)","Изготовитель");
	стЗаписываемыеКолонкиТЧТовар.Вставить("Основныетехническиехарактеристики","ТехХарактеристики");
	стЗаписываемыеКолонкиТЧТовар.Вставить("Заводскойномер","ЗаводскойНомер");
	стЗаписываемыеКолонкиТЧТовар.Вставить("ЭнергоблокиАЭС""Аккую""(№№1,2,3,4)","НомерБлока");
	стЗаписываемыеКолонкиТЧТовар.Вставить("Местомонтажа(Здание)","МестоМонтажа");
	стЗаписываемыеКолонкиТЧТовар.Вставить("Местофактическогоразмещенияоборудования","МестоФактическогоРазмещения");

	ЭксельКнига = Эксель.Workbooks.Open(ИмяФайла);	
	КоличествоСтраниц = ЭксельКнига.Sheets.Count;
	
	Для НомерЛиста = 1 По КоличествоСтраниц Цикл 
		Лист = ЭксельКнига.Sheets(НомерЛиста);
		КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
		КоличествоКолонок = Лист.Cells(1, 1).SpecialCells(11).Column;
		строкаШапкаСтрока3 = Лист.Cells(3, 1) ;
		строкаШапкаСтрока4 = Лист.Cells(4, 1) ;

		
		Для НомерСтроки = 5 По КоличествоСтрок Цикл 
			ДанныеСтроки = Новый Структура;
			ДанныеСтрокиТЧтовар = Новый Структура;
			ДанныеСтрокиДопВК1 = Новый Структура;
			ДанныеСтрокиДопВК2 = Новый Структура;
			ДанныеСтрокиДопВК3 = Новый Структура;
			
			
			Для НомерКолонки = 1 По КоличествоКолонок Цикл
				Если (НомерКолонки>23 и НомерКолонки<40) или 
					(НомерКолонки>41 и НомерКолонки<45) или //
					(НомерКолонки>52 и НомерКолонки<69) или 
					(НомерКолонки>70 и НомерКолонки<74) или   //
					(НомерКолонки>76 и НомерКолонки<93) или 
					(НомерКолонки>94 и НомерКолонки<98) или     //
					(НомерКолонки>100 и НомерКолонки<117) или 
					(НомерКолонки>118 и НомерКолонки<122)  
					Тогда  
					строкаШапка = строкаШапкаСтрока4; 
					НомерКол = Строка(НомерКолонки);
				Иначе
					строкаШапка = строкаШапкаСтрока3; 
					Если НомерКолонки>23 Тогда
						НомерКол = Строка(НомерКолонки);
					иначе
						НомерКол = "";
					КонецЕсли;
				КонецЕсли;
				
				ИмяКолонки1С = стЗаписываемыеКолонки.Получить(УбратьСимволы(НомерКол+строкаШапка.Columns(НомерКолонки).value));
				ИмяКолонки1СТовар = стЗаписываемыеКолонкиТЧТовар.Получить(УбратьСимволы(строкаШапка.Columns(НомерКолонки).value));
				ИмяКолонки1СДопВК1 = стЗаписываемыеКолонкиДопВК1.Получить(УбратьСимволы(Строка(НомерКолонки)+строкаШапка.Columns(НомерКолонки).value));
				ИмяКолонки1СДопВК2 = стЗаписываемыеКолонкиДопВК2.Получить(УбратьСимволы(Строка(НомерКолонки)+строкаШапка.Columns(НомерКолонки).value));
				ИмяКолонки1СДопВК3 = стЗаписываемыеКолонкиДопВК3.Получить(УбратьСимволы(Строка(НомерКолонки)+строкаШапка.Columns(НомерКолонки).value));
				ИмяКолонкиЕкс = строкаШапка.Columns(НомерКолонки).value;
				
				ЗначениеВЯчейке = Лист.Cells(НомерСтроки, строкаШапка.Columns(НомерКолонки).Column).Value;

				Если  ИмяКолонки1С <> Неопределено Тогда
					ДанныеСтроки.Вставить(ИмяКолонки1С,  ЗначениеВЯчейке);
					ПреоблазоватьЧислаВДату(ИмяКолонки1С,ЗначениеВЯчейке,ДанныеСтроки);
				КонецЕсли;
				
				Если  ИмяКолонки1СТовар <> Неопределено Тогда
					ДанныеСтрокиТЧтовар.Вставить(ИмяКолонки1СТовар,  ЗначениеВЯчейке);
				КонецЕсли;
				    
				Если  ИмяКолонки1СДопВК1 <> Неопределено Тогда
					ДанныеСтрокиДопВК1.Вставить(ИмяКолонки1СДопВК1,  ЗначениеВЯчейке);
					ПреоблазоватьЧислаВДату(ИмяКолонки1СДопВК1,ЗначениеВЯчейке,ДанныеСтрокиДопВК1);
				КонецЕсли;
				Если  ИмяКолонки1СДопВК2 <> Неопределено Тогда
					ДанныеСтрокиДопВК2.Вставить(ИмяКолонки1СДопВК2,  ЗначениеВЯчейке);
					ПреоблазоватьЧислаВДату(ИмяКолонки1СДопВК2,ЗначениеВЯчейке,ДанныеСтрокиДопВК2);
				КонецЕсли;
				Если  ИмяКолонки1СДопВК3 <> Неопределено Тогда
					ДанныеСтрокиДопВК3.Вставить(ИмяКолонки1СДопВК3,  ЗначениеВЯчейке);
					ПреоблазоватьЧислаВДату(ИмяКолонки1СДопВК3,ЗначениеВЯчейке,ИмяКолонки1СДопВК3);					
				КонецЕсли;
				
			КонецЦикла;
			
			
			
			
			ЗаписатьДокумент(ДанныеСтроки,ДанныеСтрокиТЧтовар);
			
			ЕстьВК=Ложь;
			Для Каждого ст из ДанныеСтрокиДопВК1 Цикл 
				Если ст.Значение<>Неопределено Тогда ЕстьВК=Истина; КонецЕсли;
			КонецЦикла;
			Если ЕстьВК Тогда
				ЗаполнитьЗначенияСвойств(ДанныеСтроки,ДанныеСтрокиДопВК1);
				ЗаписатьДокумент(ДанныеСтроки,ДанныеСтрокиТЧтовар,Ложь);				
			КонецЕсли;
			
			ЕстьВК=Ложь;
			Для Каждого ст из ДанныеСтрокиДопВК2 Цикл 
				Если ст.Значение<>Неопределено Тогда ЕстьВК=Истина; КонецЕсли;
			КонецЦикла;
			Если ЕстьВК Тогда
				ЗаполнитьЗначенияСвойств(ДанныеСтроки,ДанныеСтрокиДопВК2);
				ЗаписатьДокумент(ДанныеСтроки,ДанныеСтрокиТЧтовар,Ложь);				
			КонецЕсли;
			
			ЕстьВК=Ложь;
			Для Каждого ст из ДанныеСтрокиДопВК3 Цикл 
				Если ст.Значение<>Неопределено Тогда ЕстьВК=Истина; КонецЕсли;
			КонецЦикла;
			Если ЕстьВК Тогда
				ЗаполнитьЗначенияСвойств(ДанныеСтроки,ДанныеСтрокиДопВК3);
				ЗаписатьДокумент(ДанныеСтроки,ДанныеСтрокиТЧтовар,Ложь);				
			КонецЕсли;

			
			//Возврат;
		КонецЦикла;	
		Прервать;
	КонецЦикла;
	
	Эксель.Workbooks.Close();
	Эксель.Application.Quit();
КонецПроцедуры

Процедура ПреоблазоватьЧислаВДату(ИмяКолонки,ЗначениеВЯчейке,ДанныеСтроки)
	Если Не ЗначениеЗаполнено(ЗначениеВЯчейке) Тогда возврат; КонецЕсли;
	Если ИмяКолонки = "Уведомление_Дата_День" Тогда
		ДанныеСтроки.Вставить("Уведомление_Дата",  Дата(1980,1,Число(ЗначениеВЯчейке)));
	КонецЕсли;
	Если ИмяКолонки = "Уведомление_Дата_Месяц" Тогда
		Значение = "";
		ДанныеСтроки.Свойство("Уведомление_Дата",Значение);
		ДанныеСтроки.Вставить("Уведомление_Дата",Дата(Год(Значение),Число(ЗначениеВЯчейке),День(Значение)));
	КонецЕсли;
	Если ИмяКолонки = "Уведомление_Дата_Год" Тогда
		Значение = "";
		ДанныеСтроки.Свойство("Уведомление_Дата",Значение);
		ДанныеСтроки.Вставить("Уведомление_Дата",Дата(Число(ЗначениеВЯчейке),Месяц(Значение),День(Значение)));	
	КонецЕсли;
	
	//ДатаУтвержденияАкта
	Если ИмяКолонки = "ДатаУтвержденияАкта_День" Тогда
		ДанныеСтроки.Вставить("ДатаУтвержденияАкта",  Дата(1980,1,Число(ЗначениеВЯчейке)));
	КонецЕсли;
	Если ИмяКолонки = "ДатаУтвержденияАкта_Месяц" Тогда
		Значение = "";
		ДанныеСтроки.Свойство("ДатаУтвержденияАкта",Значение);
		ДанныеСтроки.Вставить("ДатаУтвержденияАкта",Дата(Год(Значение),Число(ЗначениеВЯчейке),День(Значение)));
	КонецЕсли;
	Если ИмяКолонки = "ДатаУтвержденияАкта_Год" Тогда
		Значение = "";
		ДанныеСтроки.Свойство("ДатаУтвержденияАкта",Значение);
		ДанныеСтроки.Вставить("ДатаУтвержденияАкта",Дата(Число(ЗначениеВЯчейке),Месяц(Значение),День(Значение)));	
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ЗаписатьДокумент(ДанныеСтроки,ДанныеСтрокиТЧтовар,Первичный=Истина)
	
	
	//Артикул="";
	//АртикулЗаполнен = ДанныеСтроки.Свойство("Артикул",Артикул);	
	//Если Не АртикулЗаполнен Тогда Возврат; КонецЕсли;
	//Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);

	НомерДок="";
	АртикулЗаполнен = ДанныеСтроки.Свойство("НомерАктаВК",НомерДок);
	//ДатаОбращения="";
	//АртикулЗаполнен = ДанныеСтроки.Свойство("ДатаОбращения",ДатаОбращения);
	
	док = Документы.пр_АктВК_2.НайтиПоРеквизиту("НомерАктаВК",НомерДок);
	
	Если Не ЗначениеЗаполнено(док) Тогда
		док = Документы.пр_АктВК_2.СоздатьДокумент();
	Иначе 
		док = док.ПолучитьОбъект();	
	КонецЕсли;
	ДанныеСтроки.Вставить("Дата",ТекущаяДата());
	ДанныеСтроки.Вставить("ВидАкта",?(Первичный,Перечисления.ВидыАктов.Первичный,Перечисления.ВидыАктов.Дополнительный));
	
	ЗаполнитьЗначенияСвойств(док, ДанныеСтроки);
	
	Артикул="";
	ДанныеСтрокиТЧтовар.Свойство("КодОборудования",Артикул);
	ДанныеСтрокиТЧтовар.Вставить("Номенклатура",Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул));
	
	СтрокаТовары = док.Товары.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТовары, ДанныеСтрокиТЧтовар);
	
	док.Записать(РежимЗаписиДокумента.Запись);				
	Сообщить(СокрЛП(док)+" - загружен.");
	
КонецПроцедуры



&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Документ Excel (*.xls, *.xlsx)|*.xls;*.xlsx";
	Диалог.МножественныйВыбор=Ложь;
	Если Диалог.Выбрать() Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры





















Процедура ЗагрузкаНаКлиентеOLEДоп()
	Попытка
		Эксель = Новый COMОбъект("Excel.Application");
		Эксель.DisplayAlerts = 0;
		Эксель.Visible = 0;
	Исключение
   		Сообщить(ОписаниеОшибки()); 
   		Возврат;
	КонецПопытки;
	
	стЗаписываемыеКолонки = Новый Соответствие;
	стЗаписываемыеКолонки.Вставить("NAME","Наименование");
	стЗаписываемыеКолонки.Вставить("KKS","Артикул");

	

	ЭксельКнига = Эксель.Workbooks.Open(ИмяФайла);	
	КоличествоСтраниц = ЭксельКнига.Sheets.Count;
	
	Для НомерЛиста = 1 По КоличествоСтраниц Цикл 
		Лист = ЭксельКнига.Sheets(НомерЛиста);
		КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
		КоличествоКолонок = Лист.Cells(1, 1).SpecialCells(11).Column;
		строкаШапка = Лист.Cells(2, 1) ;
		
		Для НомерСтроки = 3 По КоличествоСтрок Цикл 
			ДанныеСтроки = Новый Структура;
			Для НомерКолонки = 1 По КоличествоКолонок Цикл
				ИмяКолонкиСпр = стЗаписываемыеКолонки.Получить(строкаШапка.Columns(НомерКолонки).value);
				ИмяКолонкиЕкс = строкаШапка.Columns(НомерКолонки).value;
				
				ЗначениеВЯчейке = Лист.Cells(НомерСтроки, строкаШапка.Columns(НомерКолонки).Column).Value;

				Если  ИмяКолонкиСпр <> Неопределено Тогда
					ДанныеСтроки.Вставить(ИмяКолонкиСпр,  ЗначениеВЯчейке);
					ДанныеСтроки.Вставить(СокрЛП(ИмяКолонкиЕкс),  ЗначениеВЯчейке);
				иначе
					попытка
					ДанныеСтроки.Вставить(СокрЛП(ИмяКолонкиЕкс),  ЗначениеВЯчейке);
				Исключение
					Сообщить(ОписаниеОшибки());
					КонецПопытки;
				КонецЕсли;
				
			КонецЦикла;
			
			ЗаписатьНоменклатуруДопРекв(ДанныеСтроки);
			//Возврат;
		КонецЦикла;	
		Прервать;
	КонецЦикла;
	
	Эксель.Workbooks.Close();
	Эксель.Application.Quit();
КонецПроцедуры

&НаСервере
Функция ПоискЗначенияПоКлючу(ст, Ключ, ДляСоответствия=Ложь)
		Если ДляСоответствия Тогда
			Возврат ст[Ключ];
		Иначе
			ЗначениеПоиска = Неопределено;
			ст.Свойство(Ключ,ЗначениеПоиска);
			Возврат ЗначениеПоиска;
		КонецЕсли;
КонецФункции 
		
&НаСервере
Процедура ЗаписатьНоменклатуруДопРекв(ДанныеСтроки)
	  	Артикул="";
	АртикулЗаполнен = ДанныеСтроки.Свойство("Артикул",Артикул);	
	Если Не АртикулЗаполнен Тогда Возврат; КонецЕсли;
	Наименование="";
	ДанныеСтроки.Свойство("Наименование",Наименование);	
	
	
	Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		Номенклатура = Справочники.Номенклатура.СоздатьЭлемент();
	иначе
		Номенклатура= Номенклатура.Получитьобъект();
	КонецЕсли;
	
	Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(Номенклатура); 

	//ЗаполнитьЗначенияСвойств(Номенклатура, ДанныеСтроки);
	//Номенклатура.Наименование = "Удале_"+Номенклатура.Наименование;
	//Номенклатура.Артикул = "Удале_"+Номенклатура.Артикул;
	Номенклатура.Артикул = Артикул;	
	Номенклатура.Наименование = Наименование;
	Номенклатура.НаименованиеПолное = Наименование;
	Номенклатура.Записать(); 
	
	для Каждого ст Из ДанныеСтроки Цикл 
		если ст.Ключ = "Артикул" или ст.Ключ = "Наименование" Тогда Продолжить;КонецЕсли;

		СоздатьДопРеквизитНаСервере(ст.Ключ);
		ТаблицаСвойств = Новый ТаблицаЗначений;
		ТаблицаСвойств.Колонки.Добавить("Свойство");
		ТаблицаСвойств.Колонки.Добавить("Значение");
		строкаТС = ТаблицаСвойств.Добавить();
		строкаТС.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ст.Ключ);
		//ЗначениеПоиска = Неопределено;
		//ст.Свойство(Ключ,ЗначениеПоиска);
		строкаТС.Значение = ст.Значение;
	

		УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(Номенклатура.Ссылка,ТаблицаСвойств);
		
	КонецЦикла;
	
	
	
	Сообщить(СокрЛП(Номенклатура.Артикул)+" - загружен.");

	
КонецПроцедуры

&НаСервере
Процедура СоздатьДопРеквизитНаСервере(ИмяРеквизита)
	
    //включим константу использования
    Если Не Константы.ИспользоватьДополнительныеРеквизитыИСведения.Получить() Тогда
        Константы.ИспользоватьДополнительныеРеквизитыИСведения.Установить(Истина);
    КонецЕсли;
	
	//попробуем найти реквизит по наименованию
	ДопРеквизитСсылка = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ИмяРеквизита);
	Если НЕ ЗначениеЗаполнено(ДопРеквизитСсылка) Тогда
		//если не нашли реквизит - будем его создавать
		ДопРеквизитОбъект = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
		ДопРеквизитОбъект.Заголовок = ИмяРеквизита;
		ДопРеквизитОбъект.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура;
		ДопРеквизитОбъект.ТипЗначения = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(250));
		ДопРеквизитОбъект.Наименование = ДопРеквизитОбъект.Заголовок + " ("+ДопРеквизитОбъект.НаборСвойств+")";
		ДопРеквизитОбъект.Виден = Истина;
		ДопРеквизитОбъект.Доступен = Истина;
		ДопРеквизитОбъект.ДополнительныеЗначенияИспользуются = ложь;
		//зададим имя нового реквизита
		//ДопРеквизитОбъект.Имя = "filap_"+СтрЗаменить(ИмяРеквизита," ","");
		ДопРеквизитОбъект.Записать();
		ДопРеквизитСсылка = ДопРеквизитОбъект.Ссылка;		
	КонецЕсли;
	
    //добавим наш реквизит в набор дополнительных реквизитов 
    НаборДополнительныхРеквизитов = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура.ПолучитьОбъект();
    Если НаборДополнительныхРеквизитов.ДополнительныеРеквизиты.Найти(ДопРеквизитСсылка, "Свойство") = Неопределено Тогда
        //добавим реквизит в набор
        Стр = НаборДополнительныхРеквизитов.ДополнительныеРеквизиты.Добавить();
        Стр.Свойство = ДопРеквизитСсылка;
	НаборДополнительныхРеквизитов.Записать();
    КонецЕсли;
	
КонецПроцедуры

