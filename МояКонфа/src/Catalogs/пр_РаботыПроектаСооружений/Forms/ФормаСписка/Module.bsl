&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Документ Excel (*.xls, *.xlsx)|*.xls;*.xlsx";
	Диалог.МножественныйВыбор=Ложь;
	Если Диалог.Выбрать() Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузкаНаКлиентеЕксель();
КонецПроцедуры

Функция ПолучитьУровень(строка)


	строка = СокрП(строка);
	Уровень=0;
	Для НомСимвола = 1 По СтрДлина(строка) Цикл
		
		Если Сред(строка, НомСимвола, 1) = " " Тогда
			Уровень=Уровень+1;
		Иначе 
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	Возврат Уровень/2;
КонецФункции

Процедура ОчиститьСправочник()
	Если Очистка Тогда
		Выборка = Справочники.пр_РаботыПроектаСооружений.ВыбратьИерархически();
		Пока Выборка.Следующий() Цикл
			
			ОбъектСправочника = Выборка.ПолучитьОбъект();
			ОбъектСправочника.Удалить();
			
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


//&НаКлиенте
Процедура ЗагрузкаНаКлиентеЕксель()
	ВремяНачало=ТекущаяДата();
	ОчиститьСправочник();

	
	Попытка
		Эксель = Новый COMОбъект("Excel.Application");
		Эксель.DisplayAlerts = 0;
		Эксель.Visible = 0;
	Исключение
   		Сообщить(ОписаниеОшибки()); 
   		Возврат;
	КонецПопытки;
	
	стЗаписываемыеКолонки = Новый Соответствие;
	стЗаписываемыеКолонки.Вставить("Activity ID","ИДРаботы");
	стЗаписываемыеКолонки.Вставить("Activity Name","НаименованиеРаботы");
	стЗаписываемыеКолонки.Вставить("KKS","КодОборудования");
	стЗаписываемыеКолонки.Вставить("Начало по ЦП","НачалоПоЦелевомуПлану");
	стЗаписываемыеКолонки.Вставить("Окончание по ЦП","КонецПоЦелевомуПлану");
	стЗаписываемыеКолонки.Вставить("Start","НачалоАктуально");
	стЗаписываемыеКолонки.Вставить("Finish","КонецАктуально");
	
	ЭксельКнига = Эксель.Workbooks.Open(ИмяФайла);	
	КоличествоСтраниц = ЭксельКнига.Sheets.Count;
	
	Для НомерЛиста = 1 По КоличествоСтраниц Цикл 
		
		Лист = ЭксельКнига.Sheets(НомерЛиста);
		ИмяЛиста = ЭксельКнига.Sheets(НомерЛиста).Name;
		НомерБлока = Число(СтрЗаменить(ИмяЛиста,"Блок",""));
		//Если НомерБлока<>1 Тогда продолжить; КонецЕсли; 
		КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
		КоличествоКолонок = Лист.Cells(1, 1).SpecialCells(11).Column;
		строкаШапка = Лист.Cells(1, 1) ;
		
		ТаблицаПлана = Новый ТаблицаЗначений;
		ТаблицаПлана.Колонки.Добавить("ИДРаботы");
		ТаблицаПлана.Колонки.Добавить("НаименованиеРаботы");
		ТаблицаПлана.Колонки.Добавить("КодОборудования");
		ТаблицаПлана.Колонки.Добавить("НачалоПоЦелевомуПлану");
		ТаблицаПлана.Колонки.Добавить("КонецПоЦелевомуПлану");
		ТаблицаПлана.Колонки.Добавить("НачалоАктуально");
		ТаблицаПлана.Колонки.Добавить("КонецАктуально");
		ТаблицаПлана.Колонки.Добавить("Группа");
		ТаблицаПлана.Колонки.Добавить("НПП");
		ТаблицаПлана.Колонки.Добавить("Родитель");
		ТаблицаПлана.Колонки.Добавить("Уровень");
		ТаблицаПлана.Колонки.Добавить("НазваниеПланаДляБлока");
		ТаблицаПлана.Колонки.Добавить("РодительСсылка");
		
		
		НПП=0;
		Для НомерСтроки = 2 По КоличествоСтрок Цикл 
			ДанныеСтроки = Новый Структура;
			Для НомерКолонки = 1 По КоличествоКолонок Цикл
				ИмяКолонки1С = стЗаписываемыеКолонки.Получить(строкаШапка.Columns(НомерКолонки).value);
				ИмяКолонкиЕкс = строкаШапка.Columns(НомерКолонки).value;
				
				ЗначениеВЯчейке = Лист.Cells(НомерСтроки, строкаШапка.Columns(НомерКолонки).Column).Value;
				
				
				Если  ИмяКолонки1С <> Неопределено Тогда
					Если  ИмяКолонки1С = "ИДРаботы" Тогда
						Если СокрЛП(ЗначениеВЯчейке)="" Тогда прервать; КонецЕсли;
					КонецЕсли;
					Если ИмяКолонки1С="НачалоАктуально" или ИмяКолонки1С="КонецАктуально" Тогда
						Если ТипЗнч(ЗначениеВЯчейке)=тип("Строка") Тогда
							ЗначениеВЯчейке = СтрЗаменить(СтрЗаменить(СтрЗаменить(ЗначениеВЯчейке,"A","")," ",""),"*","");
							массив=СтрРазделить(ЗначениеВЯчейке,".");
							ЗначениеВЯчейке = Дата(массив[2]+массив[1]+массив[0]);
						КонецЕсли;
					КонецЕсли;
					
					
					
					ДанныеСтроки.Вставить(ИмяКолонки1С,  ЗначениеВЯчейке);
					
					Если ИмяКолонки1С = "НаименованиеРаботы" Тогда
						Если СокрЛП(ЗначениеВЯчейке)="" Тогда
							ДанныеСтроки.Вставить("Группа",Истина);
							
						Иначе
							ДанныеСтроки.Вставить("Группа",Ложь);
						КонецЕсли;
						ДанныеСтроки.Вставить("НПП",НПП);
						НПП=НПП+1;
					КонецЕсли;
					
					Если  ИмяКолонки1С = "ИДРаботы" Тогда
						 ДанныеСтроки.Вставить("Уровень",ПолучитьУровень(ЗначениеВЯчейке));
						 ДанныеСтроки.Вставить("ИДРаботы",СокрЛП(ЗначениеВЯчейке));
					КонецЕсли;
						
				КонецЕсли;

	
			КонецЦикла;
			
			Если ДанныеСтроки.Количество()=0 Тогда Продолжить; КонецЕсли;// пропускаем пустые строки
			
			мГрупп = ТаблицаПлана.НайтиСтроки(Новый Структура("Группа",Истина));
			Если мГрупп.Количество()>0 Тогда
				Родитель = мГрупп[мГрупп.ВГраница()]["НПП"];
			Иначе 
				Родитель = 0;
			КонецЕсли;
			
			
			ЭтаГруппа=Ложь;
			ДанныеСтроки.Свойство("Группа",ЭтаГруппа);
			Если ЭтаГруппа Тогда
				Если мГрупп.Количество()>0 Тогда
					УровеньГруппы=0;
					ДанныеСтроки.Свойство("Уровень",УровеньГруппы);
					УровеньГруппы=УровеньГруппы-1;
					мУровнейГрупп = ТаблицаПлана.НайтиСтроки(Новый Структура("Уровень,Группа",УровеньГруппы,Истина));
					Если мУровнейГрупп.Количество()>0 Тогда
						Родитель = мУровнейГрупп[мУровнейГрупп.ВГраница()]["НПП"];
					Иначе 
						Родитель = 0;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ДанныеСтроки.Вставить("Родитель",Родитель);
			
			ЗаполнитьЗначенияСвойств(ТаблицаПлана.Добавить(),ДанныеСтроки);
			
			//Если  НомерСтроки>100 Тогда Прервать; КонецЕсли;
			
		КонецЦикла;
		 

		
		ЗагрузитьРаботыДляБлока(НомерБлока,ТаблицаПлана);
		//Прервать;
	КонецЦикла;
	
	//РаскраситьНеВалидныеСтрокиКрасным();

	Эксель.Workbooks.Close();
	Эксель.Application.Quit();
	
	сообщить("Время выполнения загрузки состовляет "+Строка((ТекущаяДата()-ВремяНачало))+"сек.");
КонецПроцедуры

Функция НайтиРаботу(НаименованиеКод,НомерБлока,ИДРодителя=Неопределено,ПоискПоНаименованию,ЭтоГруппа=Истина,ПоискРодителя=Истина)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	пр_РаботыПроектаСооружений.Ссылка КАК Работа
		|ИЗ
		|	Справочник.пр_РаботыПроектаСооружений КАК пр_РаботыПроектаСооружений
		|ГДЕ  
		|	 пр_РаботыПроектаСооружений.ЭтоГруппа = &ЭтоГруппа
		|	И пр_РаботыПроектаСооружений.НомерБлока = &НомерБлока";
	Если ПоискПоНаименованию Тогда
		Запрос.Текст = Запрос.Текст + "	И пр_РаботыПроектаСооружений.Наименование = &Наименование";
		Запрос.УстановитьПараметр("Наименование", НаименованиеКод);
	Иначе 
		Запрос.Текст = Запрос.Текст + "	И пр_РаботыПроектаСооружений.Код = &Код";
		Запрос.УстановитьПараметр("Код", НаименованиеКод);
	КонецЕсли;
	Если  ИДРодителя<>Неопределено Тогда
		Если не ПоискРодителя Тогда
			Запрос.Текст = Запрос.Текст + "	И пр_РаботыПроектаСооружений.НПП >= &ИДРодителя"; //и пр_РаботыПроектаСооружений.НПП <= &НПП";
			Запрос.УстановитьПараметр("ИДРодителя", ИДРодителя.Родитель);
			//Запрос.УстановитьПараметр("НПП", ИДРодителя.НПП+1);
		Иначе 
			Запрос.Текст = Запрос.Текст + "	И пр_РаботыПроектаСооружений.НПП = &ИДРодителя ";
			Запрос.УстановитьПараметр("ИДРодителя", ИДРодителя.Родитель);
		КонецЕсли;
	КонецЕсли;
	

	Запрос.УстановитьПараметр("НомерБлока", НомерБлока);
	Запрос.УстановитьПараметр("ЭтоГруппа", ЭтоГруппа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Работа.Ссылка;
	КонецЦикла;
	

	Возврат Неопределено;
КонецФункции

Процедура ОчиститьНПП(НомерБлока)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	пр_РаботыПроектаСооружений.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.пр_РаботыПроектаСооружений КАК пр_РаботыПроектаСооружений
		|ГДЕ
		|	пр_РаботыПроектаСооружений.НомерБлока = &НомерБлока";
	
	Запрос.УстановитьПараметр("НомерБлока", НомерБлока);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		спр = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		спр.НПП=999999999;
		спр.Записать();
	КонецЦикла;
	
КонецПроцедуры


Процедура ЗагрузитьРаботыДляБлока(НомерБлока,ТаблицаПлана)
	
	ОчиститьНПП(НомерБлока);

	//Возврат;	
	НайденКод = ЗначениеЗаполнено(Справочники.пр_РаботыПроектаСооружений.НайтиПоКоду("Р-000001"));
	Для Каждого строка из ТаблицаПлана Цикл 
		Если не ЗначениеЗаполнено(строка.ИДРаботы) Тогда продолжить; КонецЕсли;
		
		Если строка.Группа Тогда
			СпрПроекта = НайтиРаботу(строка.ИДРаботы,НомерБлока,строка,Истина,Истина,Ложь);
		Иначе 
			СпрПроекта = НайтиРаботу(строка.ИДРаботы,НомерБлока,,Ложь,Ложь);
		КонецЕсли;
		
		Если не ЗначениеЗаполнено(СпрПроекта) Тогда
			Если строка.Группа Тогда
				СпрПроекта = Справочники.пр_РаботыПроектаСооружений.СоздатьГруппу();
			Иначе 
				СпрПроекта = Справочники.пр_РаботыПроектаСооружений.СоздатьЭлемент();
			КонецЕсли;
		Иначе
			СпрПроекта = СпрПроекта.ПолучитьОбъект();			
		КонецЕсли;
		
		Если строка.Группа Тогда
			Если СпрПроекта.ЭтоНовый() Тогда
				СпрПроекта.УстановитьНовыйКод("Р-");
				Если Не НайденКод  Тогда
					СпрПроекта.Код = "Р-000001";
					НайденКод=Истина;
				КонецЕсли;
			КонецЕсли;
		 
			СпрПроекта.Наименование = строка.ИДРаботы;
		Иначе 
			СпрПроекта.Код = строка.ИДРаботы;
			СпрПроекта.Наименование = строка.НаименованиеРаботы;
			СпрПроекта.КодОборудования = строка.КодОборудования;
		КонецЕсли;
		
		СпрПроекта.НачалоПоЦелевомуПлану = строка.НачалоПоЦелевомуПлану;
		СпрПроекта.КонецПоЦелевомуПлану  = строка.КонецПоЦелевомуПлану;
		СпрПроекта.НачалоАктуально = строка.НачалоАктуально;
		СпрПроекта.КонецАктуально  = строка.КонецАктуально;
		СпрПроекта.НомерБлока = НомерБлока;
		СпрПроекта.НПП = Строка.НПП;
		
		
		массив = ТаблицаПлана.НайтиСтроки(Новый Структура("НПП",строка.Родитель));
		РодительСсылка=Справочники.пр_РаботыПроектаСооружений.ПустаяСсылка();
		Если массив.Количество()>0 Тогда
			РодительСсылка = НайтиРаботу(массив[0]["ИДРаботы"],НомерБлока,строка,Истина,Истина);
		КонецЕсли;
		
		Если СпрПроекта.Ссылка <> РодительСсылка Тогда
			СпрПроекта.Родитель = РодительСсылка;
		КонецЕсли;
		
		Попытка
			Если СпрПроекта.ЭтоНовый() Тогда
				Сообщить("Новый объект."+СпрПроекта.Код+" "+СпрПроекта.Наименование+" "+СпрПроекта.Родитель);
			КонецЕсли;
			
			СпрПроекта.Записать(); 
		Исключение
			Сообщить(ОписаниеОшибки()+" "+строка(СпрПроекта.Код)+" "+строка(СпрПроекта.Наименование));
		КонецПопытки;
		Если Не СпрПроекта.ЭтоГруппа Тогда
			ОбновитьРегистрСвязиРаботИноменклатуры(СпрПроекта.Ссылка);
		КонецЕсли;
		строка.РодительСсылка = СпрПроекта.ссылка;///РодительСсылка;
		
	КонецЦикла;

	
КонецПроцедуры

Процедура ОбновитьРегистрСвязиРаботИноменклатуры(Работа)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	пр_СвязьОборудованияИГрафикаРабот.Регистратор КАК Регистратор,
	|	пр_СвязьОборудованияИГрафикаРабот.Работа КАК Работа,
	|	пр_СвязьОборудованияИГрафикаРабот.НомерБлока КАК НомерБлока,
	|	пр_СвязьОборудованияИГрафикаРабот.Номенклатура КАК Номенклатура,
	|	пр_СвязьОборудованияИГрафикаРабот.КодОборудования КАК КодОборудования,
	|	пр_СвязьОборудованияИГрафикаРабот.ИДРаботы КАК ИДРаботы
	|ИЗ
	|	РегистрСведений.пр_СвязьОборудованияИГрафикаРабот КАК пр_СвязьОборудованияИГрафикаРабот
	|ГДЕ
	|	пр_СвязьОборудованияИГрафикаРабот.Работа = &Работа
	|	И
	|пр_СвязьОборудованияИГрафикаРабот.ИДРаботы = &ИДРаботы
	|	И пр_СвязьОборудованияИГрафикаРабот.НомерБлока = &НомерБлока";
	
	Запрос.УстановитьПараметр("ИДРаботы", Работа.Код);
	Запрос.УстановитьПараметр("НомерБлока", Работа.НомерБлока);
	Запрос.УстановитьПараметр("Работа", Справочники.пр_РаботыПроектаСооружений.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.пр_СвязьОборудованияИГрафикаРабот.СоздатьНаборЗаписей ();
	Пока Выборка.Следующий () Цикл
		НаборЗаписей.Отбор.Регистратор.Установить( Выборка.Регистратор );
		НаборЗаписей.Прочитать();
		Для каждого Запись из НаборЗаписей Цикл
			Если Не ЗначениеЗаполнено(Запись.Работа) и Запись.ИДРаботы=Работа.Код Тогда
				Запись.Работа = Работа;
				НаборЗаписей.Записать();
				//снимаем флаг подвентки
				Док = Выборка.Регистратор.Ссылка.ПолучитьОбъект();
				СтрокаТЧ = Док.Товары.Получить(Запись.НомерСтроки-1);
				СтрокаТЧ.флРабота = Ложь;
				Док.Записать(?(Док.Проведен,РежимЗаписиДокумента.Проведение,РежимЗаписиДокумента.Запись));
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;

	
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьНоменклатуру(Команда)
	ПоказатьНоменклатуруНаСервере();
КонецПроцедуры



&НаСервере
Процедура ПоказатьНоменклатуруНаСервере()
	Запрос = Новый Запрос; 
	Запрос.Текст = "ВЫБРАТЬ
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа КАК Работа,
	               |	пр_СвязьОборудованияИГрафикаРабот.НомерБлока КАК НомерБлока,
	               |	пр_СвязьОборудованияИГрафикаРабот.Номенклатура КАК Номенклатура,
	               |	пр_СвязьОборудованияИГрафикаРабот.КодОборудования КАК КодОборудования,
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа.НачалоПоЦелевомуПлану КАК НачалоПоЦП,
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа.КонецПоЦелевомуПлану КАК КонецПоЦП,
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа.НачалоАктуально КАК НачалоАктуально,
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа.КонецАктуально КАК КонецАктуально,
	               |	пр_СвязьОборудованияИГрафикаРабот.Регистратор КАК Документ
	               |ИЗ
	               |	РегистрСведений.пр_СвязьОборудованияИГрафикаРабот КАК пр_СвязьОборудованияИГрафикаРабот
	               |ГДЕ
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа В ИЕРАРХИИ(&Работа)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа,
	               |	пр_СвязьОборудованияИГрафикаРабот.НомерБлока,
	               |	пр_СвязьОборудованияИГрафикаРабот.Номенклатура,
	               |	пр_СвязьОборудованияИГрафикаРабот.КодОборудования,
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа.НачалоПоЦелевомуПлану,
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа.КонецПоЦелевомуПлану,
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа.НачалоАктуально,
	               |	пр_СвязьОборудованияИГрафикаРабот.Работа.КонецАктуально,
	               |	пр_СвязьОборудованияИГрафикаРабот.Регистратор
	               |ИТОГИ ПО
	               |	Работа"; 
	
	Запрос.УстановитьПараметр("Работа", ЭтотОбъект.ТекущийЭлемент.ТекущаяСтрока); 
	
	Результат = Запрос.Выполнить(); 
	
	Макет = Справочники.пр_РаботыПроектаСооружений.ПолучитьМакет("Макет"); 
	ТабДок = Новый ТабличныйДокумент; 
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(ОбластьЗаголовок);
	ОбластьРабота = Макет.ПолучитьОбласть("Работа"); 
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаРабота = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРабота.Следующий() Цикл
		
		ОбластьРабота.Параметры.Заполнить(ВыборкаРабота); 
		ТабДок.Вывести(ОбластьРабота); 
		ВыборкаДетальныеЗаписи = ВыборкаРабота.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбластьНоменклатура.Параметры.Заполнить(ВыборкаДетальныеЗаписи); 
			ОбластьНоменклатура.Параметры.Расшифровка = ВыборкаДетальныеЗаписи.Номенклатура;
			ОбластьНоменклатура.Параметры.РасшифровкаДок = ВыборкаДетальныеЗаписи.Документ;
			ТабДок.Вывести(ОбластьНоменклатура); 
		КонецЦикла;
		
	КонецЦикла;
	ТабДок.ТолькоПросмотр=Истина;
	ТабДок.Показать("Связь работы с номенклатурой");

КонецПроцедуры


