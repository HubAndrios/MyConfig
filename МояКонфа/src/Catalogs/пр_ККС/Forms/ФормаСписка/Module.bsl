&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Документ Excel (*.xls, *.xlsx)|*.xls;*.xlsx";
	Диалог.МножественныйВыбор=Ложь;
	Если Диалог.Выбрать() Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузкаНаКлиентеЕксель();
КонецПроцедуры


Процедура ОчиститьСправочник()
	Если Очистка Тогда
		Выборка = Справочники.пр_ККС.ВыбратьИерархически();
		Пока Выборка.Следующий() Цикл
			
			ОбъектСправочника = Выборка.ПолучитьОбъект();
			ОбъектСправочника.Удалить();
			
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


//&НаКлиенте
Процедура ЗагрузкаНаКлиентеЕксель()
	
	ОчиститьСправочник();

	
	Попытка
		Эксель = Новый COMОбъект("Excel.Application");
		Эксель.DisplayAlerts = 0;
		Эксель.Visible = 0;
	Исключение
   		Сообщить(ОписаниеОшибки()); 
   		Возврат;
	КонецПопытки;
	
	стЗаписываемыеКолонки = Новый Соответствие;
	стЗаписываемыеКолонки.Вставить("Код","Код");
	стЗаписываемыеКолонки.Вставить("Наименование","Наименование");
	
	ЭксельКнига = Эксель.Workbooks.Open(ИмяФайла);	
	КоличествоСтраниц = ЭксельКнига.Sheets.Count;
	
	Для НомерЛиста = 1 По КоличествоСтраниц Цикл 
		
		Лист = ЭксельКнига.Sheets(НомерЛиста);
		КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
		КоличествоКолонок = Лист.Cells(1, 1).SpecialCells(11).Column;

		
		ТаблицаПлана = Новый ТаблицаЗначений;
		ТаблицаПлана.Колонки.Добавить("Код");
		ТаблицаПлана.Колонки.Добавить("Наименование");
		ТаблицаПлана.Колонки.Добавить("Группа");
		ТаблицаПлана.Колонки.Добавить("НПП");
		ТаблицаПлана.Колонки.Добавить("Родитель");
		ТаблицаПлана.Колонки.Добавить("Уровень");
		ТаблицаПлана.Колонки.Добавить("РодительСсылка");
		
		НПП=0;
		НомерСтрокиНазвания=0;
		Для НомерСтроки = 1 По КоличествоСтрок Цикл
			ЗначениеВЯчейке = Лист.Cells(НомерСтроки, 1).Value;
			Если ЗначениеЗаполнено(ЗначениеВЯчейке) Тогда
				Массив = СтрРазделить(ЗначениеВЯчейке," ");
				строкаТЧ = ТаблицаПлана.Добавить();
				строкаТЧ.Код = Массив[0];
				строкаТЧ.Наименование = СокрЛП(СтрЗаменить(ЗначениеВЯчейке,Массив[0],""));
				строкаТЧ.Группа = Истина;
				строкаТЧ.НПП=НПП; 
				НПП = НПП+1;
				строкаТЧ.Родитель = 0;
				строкаТЧ.Уровень = 0;
				НомерСтрокиНазвания=НомерСтроки+3;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		строкаШапка = Лист.Cells(НомерСтрокиНазвания-1, 1) ;
		
		Для НомерСтроки = НомерСтрокиНазвания По КоличествоСтрок Цикл 
			ДанныеСтроки = Новый Структура;
			Для НомерКолонки = 1 По КоличествоКолонок Цикл
				ИмяКолонки1С = стЗаписываемыеКолонки.Получить(СокрЛП(строкаШапка.Columns(НомерКолонки).value));
				ИмяКолонкиЕкс = строкаШапка.Columns(НомерКолонки).value;
				
				ЗначениеВЯчейке = Лист.Cells(НомерСтроки, строкаШапка.Columns(НомерКолонки).Column).Value;
				ЕстьОбъединение = Лист.Cells(НомерСтроки, строкаШапка.Columns(НомерКолонки).Column).MergeArea.Mergecells;
				Если ЕстьОбъединение Тогда
					ЗначениеВЯчейке = Лист.Cells(НомерСтроки, строкаШапка.Columns(НомерКолонки).Column).MergeArea.Value.Выгрузить()[0][0];
				КонецЕсли;
				Группа = Лист.Cells(НомерСтроки, строкаШапка.Columns(НомерКолонки).Column).Font.Bold;
				
				Если  ИмяКолонки1С <> Неопределено Тогда
					ДанныеСтроки.Вставить(ИмяКолонки1С,  ЗначениеВЯчейке);
					
					Если ИмяКолонки1С = "Код" Тогда
						ДанныеСтроки.Вставить("Уровень",ПолучитьУровень(ЗначениеВЯчейке));
						ДанныеСтроки.Вставить("Группа",Группа);
						ДанныеСтроки.Вставить("НПП",НПП);
						ДанныеСтроки.Вставить("Уровень",ПолучитьУровень(ЗначениеВЯчейке));
						НПП=НПП+1;
					КонецЕсли;
					
				КонецЕсли;

	
			КонецЦикла;
			
			мГрупп = ТаблицаПлана.НайтиСтроки(Новый Структура("Группа",Истина));
			Если мГрупп.Количество()>0 Тогда
				Родитель = мГрупп[мГрупп.ВГраница()]["НПП"];
			Иначе 
				Родитель = 0;
			КонецЕсли;
			
			
			ЭтаГруппа=Ложь;
			ДанныеСтроки.Свойство("Группа",ЭтаГруппа);
			Если ЭтаГруппа Тогда
				Если мГрупп.Количество()>0 Тогда
					УровеньГруппы=0;
					ДанныеСтроки.Свойство("Уровень",УровеньГруппы);
					УровеньГруппы=УровеньГруппы-1;
					мУровнейГрупп = ТаблицаПлана.НайтиСтроки(Новый Структура("Уровень,Группа",УровеньГруппы,Истина));
					Если мУровнейГрупп.Количество()>0 Тогда
						Родитель = мУровнейГрупп[мУровнейГрупп.ВГраница()]["НПП"];
					Иначе 
						Родитель = 0;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ДанныеСтроки.Вставить("Родитель",Родитель);
			
			ЗаполнитьЗначенияСвойств(ТаблицаПлана.Добавить(),ДанныеСтроки);
			
			//Если  НомерСтроки>10 Тогда Прервать; КонецЕсли;
			
		КонецЦикла;
		 

		
		ЗагрузитьККС(ТаблицаПлана);
		//Прервать;
	КонецЦикла;
	
	//РаскраситьНеВалидныеСтрокиКрасным();

	Эксель.Workbooks.Close();
	Эксель.Application.Quit();
КонецПроцедуры

Функция ПолучитьУровень(строка)
	Возврат СтрДлина(СтрЗаменить(СокрЛП(строка),".",""));
КонецФункции

Функция НайтиЭлементККС(Код,ИДРодителя=Неопределено,ЭтоГруппа=Истина)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ККС.Ссылка КАК ККССсылка
	|ИЗ
	|	Справочник.пр_ККС КАК ККС
	|ГДЕ
	|	ККС.ЭтоГруппа = &ЭтоГруппа
	|	И ККС.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", Код);
	Если ИДРодителя <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "	И ККС.НПП = &ИДРодителя";
		Запрос.УстановитьПараметр("ИДРодителя", ИДРодителя);
	КонецЕсли;

	
	Запрос.УстановитьПараметр("ЭтоГруппа", ЭтоГруппа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.ККССсылка.Ссылка;
	КонецЦикла;
	
	
	Возврат Неопределено;
КонецФункции


Процедура ЗагрузитьККС(ТаблицаПлана)
	

	//Возврат;	
	//НайденКод = ЗначениеЗаполнено(Справочники.пр_ККС.НайтиПоКоду("Р-000001"));
	Для Каждого строка из ТаблицаПлана Цикл 
		Если не ЗначениеЗаполнено(строка.Код) Тогда продолжить; КонецЕсли;
		
		Если строка.Группа Тогда
			СпрЭлемент = НайтиЭлементККС(строка.Код,строка.Родитель,Истина);
		Иначе 
			СпрЭлемент = НайтиЭлементККС(строка.Код,,Ложь);
		КонецЕсли;
		
		Если не ЗначениеЗаполнено(СпрЭлемент) Тогда
			Если строка.Группа Тогда
				СпрЭлемент = Справочники.пр_ККС.СоздатьГруппу();
			Иначе 
				СпрЭлемент = Справочники.пр_ККС.СоздатьЭлемент();
			КонецЕсли;
		Иначе
			//строка.РодительСсылка = СпрПроекта.Родитель; 
			СпрЭлемент = СпрЭлемент.ПолучитьОбъект();			
		КонецЕсли;
		
		СпрЭлемент.Код = строка.Код;
		СпрЭлемент.Наименование = строка.Наименование;
		СпрЭлемент.НПП = Строка.НПП;
		
		
		массив = ТаблицаПлана.НайтиСтроки(Новый Структура("НПП",строка.Родитель));
		РодительСсылка=Справочники.пр_ККС.ПустаяСсылка();
		Если массив.Количество()=0 Тогда
			РодительСсылка = Справочники.пр_ККС.ПустаяСсылка();
		Иначе 
			РодительСсылка = НайтиЭлементККС(массив[0]["Код"],строка.Родитель,Истина);
		КонецЕсли;
		Если СпрЭлемент.Ссылка<> РодительСсылка Тогда
			СпрЭлемент.Родитель = РодительСсылка;
		КонецЕсли;
		Попытка
		СпрЭлемент.Записать(); 
	Исключение
		Сообщить(ОписаниеОшибки()+строка(СпрЭлемент.Код)+" "+строка(СпрЭлемент.Наименование));
		КонецПопытки;
		
		строка.РодительСсылка = СпрЭлемент.ссылка;///РодительСсылка;
		
	КонецЦикла;

	
КонецПроцедуры

